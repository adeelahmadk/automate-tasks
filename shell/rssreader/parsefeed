#!/usr/bin/env sh

# #####################################################
# Script:       parser.sh                             #
# Version:      0.30                                  #
# Author:       Adeel Ahmad (adeelahmadk)             #
# Date Crated:  Sep 26, 2022 (rewrite)                #
# Date Updated: Oct 08, 2022                          #
# Usage:        parser n                              #
# Description:  Feed parser script to read,format and #
#               print feeds, cached by the reader     #
#               from a default directory.             #
# #####################################################

# Executables with absolute paths
_awk=`which awk`
_sed=`which sed`

# Global Vars
_DEFAULT_STORE="$HOME/.cache/rss-reader"
NUM_ROWS=0
MAX_LEN=

print_usage() {
    echo "Usage: `basename $0` [n] [MAX_LENGTH]" 1>&2
    echo "Read feed headlines from files (named domain.feed) in the default store" 1>&2
    echo "  n           number of feed headlines / file (default 5)" 1>&2
    echo "  MAX_LENGTH  number of characters to truncate longer headlines" 1>&2
}

is_integer ()
{
    case "${1#[+-]}" in
        (*[!0123456789]*) return 1 ;;
        ('')              return 1 ;;
        (*)               return 0 ;;
    esac
}

main() {
    if [ "$#" -gt 2 ]; then
        print_usage
        return 1
    fi
    
    if [ "$#" -eq 0 ]; then
        NUM_ROWS=5;
    elif [ "$#" -ge 1 ]; then
        if [ "$1" = "-h" ]; then
            print_usage
            return 0
        fi
        if ! is_integer "$1" ; then
            echo "n is not an integer"
            print_usage
            return 2
        else
            NUM_ROWS="$1"
        fi
    fi
    if [ "$#" -eq 2 ] && is_integer "$2" ; then
        # trim lines after max length
        MAX_LEN="$2"
    fi

    if [ ! -d "$_DEFAULT_STORE" ]; then
        echo "feed store ${_DEFAULT_STORE} not found" 1>&2
        return 4
    fi

    # read feeds
    NUM_ROWS=$(($NUM_ROWS + 1))     # add 1 for the heading
    for FILE in $_DEFAULT_STORE/*; do
        #echo "reading "$FILE" now..."
        if [ -n "$MAX_LEN" ]; then
            $_awk -v n=$NUM_ROWS \
                'BEGIN{ RS="\n\n"; ORS="" }
                NR==2 {print "\n"}
                {print $0 "\n"}
                NR==n {exit}' \
                $FILE \
            | $_sed 's/\(^.\{'"$MAX_LEN"'\}\).*/\1.../' # trunc at max length
        else
            $_awk -v n=$NUM_ROWS \
                'BEGIN{ RS="\n\n"; ORS="" }
                NR==2 {print "\n"}
                {print $0 "\n"}
                NR==n {exit}' \
                $FILE
        fi
        printf "\n"
    done
}

main "$@"
